{"name":"Wxpymoo","tagline":"wxPython MOO client with MCP 2.1, ANSI, and fuzzy love","body":"#wxpymoo\r\n\r\nwxpymoo (pronounced \"wispy-moo\") is a wxPython MOO client, very work-in-progress.  It's intended to run on Windows, MacOS, and Linux/etc.\r\n\r\nThis is a response to Andrew Wilson's fantastic [tkMOO-light](http://www.awns.com/tkMOO-light) MOO client being basically abandoned, tk-based, which is ugly, and coded in TCL which I find eye-stabbingly difficult to work with.  So I thought I'd see if I could reproduce the 75% of it that I use, using Perl which I understand, and Wx which looks like something even remotely from the 21st century.\r\n\r\n[Which I did](https://github.com/emersonrp/WxMOO).\r\n\r\nAnd then I started discovering how difficult it is to package and release wxPerl applications.\r\n\r\nSo I punted, and reimplemented the entire thing in wxPython.  And here we are.\r\n\r\n##Done\r\n* Connects to a MOO.  Initially, it defaults to my MOO at hayseed.net:7777, but the Worlds->Connect dialog now works to connect wherever you like.\r\n* Takes input, and shows output.  Almost pleasantly, even.\r\n* Input field has a super-basic but functional command history.\r\n* ANSI color/style codes are well-supported.\r\n* Partial [MCP/2.1](http://www.moo.mud.org/mcp/mcp2.html) implementation -- mcp-negotiate is implemented;  mcp-cord is only partially.\r\n* Starting in on MCP packages:\r\n    * dns-com-awns-rehash (partial)\r\n    * dns-com-awns-serverinfo\r\n    * dns-com-awns-status (partial)\r\n    * dns-com-vmoo-client\r\n    * dns-com-vmoo-smartcomplete (partial)\r\n    * dns-org-mud-moo-simpleedit (external editor configurable)\r\n* Saving prefs works, for the small set of prefs it honors.  Lots of work intended here, still.\r\n* Rudimentary tab-complete\r\n\r\n##0.1 Milestone\r\n* fix output pane scroll-to-bottom behavior to dwym.\r\n* More keyboard accelerators;  page-up/down etc\r\n* make sure it works on MacOS and Windows\r\n* Clean up tab-complete ui\r\n* Finish dns-com-awns-status Toast-style popups\r\n\r\n##To do\r\n* Add proper prefs and world/connection handling (85% done)\r\n* Actually support multiple simultaneous connections (90% done)\r\n* Pondering schemes to scrape online MOO lists to offer suggestions. (70% done)\r\n* Start rolling binary packages for all platforms once it's remotely useful to anyone but me.\r\n* Customizable colors / themes (currently you can have any colors you want as long as they're solarized-dark.)\r\n* Per-world settings?  Colors, fonts?\r\n* Finish MCP 2.1 implementation.\r\n* Object browser, like MacMOOSE but hopefully nicer.\r\n* Connections to have a 'connection type' -- currently thinking TCP port, SSL, and SSH port forwarding (automagic at connection time).\r\n\r\n##Blue-sky\r\n* HTML help, using jtext?\r\n* MIME-based external apps, ie mplayer for audio/flac etc?  MCP package to accept MIME+data?  dns-com-vmoo-mmedia?\r\n* inline MOO syntax highlighting?  Like, detect the output of \"@list $player:tell\" and auto-highlight it?\r\n\r\n##Things that aren't currently on the rader\r\n* tkMOO-light has a plugin architecture, and all sorts of third-party additions (I even wrote one, years ago).  Ihave no expectation that there'll be an ecosystem of developers around **this** MOO client, so I'm not actually desigining with that in mind.\r\n* I MOO socially, occasionally.  I don't do RPG MUDs or things like that, so I have no need for triggers and macros and so forth.  I don't even have a clear idea of what people do with them.  Convince me.\r\n\r\n##Guiding thoughts\r\n* Monospaced fonts and line-based terminal output are not mutually incompatible with intuitive, pleasant UIs.\r\n* There are many wheels out there that have been invented well already.  My MOO client doesn't need its own built-in text editor.  Lather, rinse, repeat.\r\n* Nobody's living on a shell account on a VMS machine.  The MOO doesn't need to be a black-and-white culdesac.  There are dozens of interesting things a MOO client could do, connected to the 21st-century Internet, that I haven't thought of yet.  Detect chat in a different language and offer to translate?  Tweet you when your friends log on?  Display Google Maps for a MOO that knows how to host that?  Who knows.\r\n\r\n##Dependencies\r\n* [Python](http://www.python.org) 2.7\r\n* [wxPython](http://www.wxpython.org) 3.0+\r\n* [twisted](https://twistedmatrix.com/trac/)\r\n\r\nFedora users:\r\n    sudo dnf install python wxPython python-twisted\r\n\r\n\r\n##Acknowledgements\r\n* wxpymoo is inspired by (and occasionally directly borrows from) [Andrew Wilson](http://www.awns.com)'s [tkMOO-light](http://www.awns.com/tkMOO-light), which is still probably the most-capable and -advanced MOO client around.\r\n* [PADRE](http://padre.perlide.org) is not something I use, being a [vim](http://www.vim.org) junkie, but their generously-licensed code for a production wxperl application was an invaluable reference while getting the original perl version working..\r\n* [Daring Fireball](http://www.daringfireball.net)'s blog graciously supplied to the public domain the [URL-detecting regex](http://daringfireball.net/2010/07/improved_regex_for_matching_urls) that I adapted.\r\n* [Stack Overflow](http://www.stackoverflow.com) has helped me in countless large and small ways.  Specifically, answers by Adaephon, Jeremy Cantrell, and Mark Ransom assisted in getting my head around working with color in Python.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}